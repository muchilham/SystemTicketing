#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SystemTicketing
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TicketingDB")]
	public partial class TicketingDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Admin(tbl_Admin instance);
    partial void Updatetbl_Admin(tbl_Admin instance);
    partial void Deletetbl_Admin(tbl_Admin instance);
    partial void Inserttbl_Booking(tbl_Booking instance);
    partial void Updatetbl_Booking(tbl_Booking instance);
    partial void Deletetbl_Booking(tbl_Booking instance);
    partial void Inserttbl_Customer(tbl_Customer instance);
    partial void Updatetbl_Customer(tbl_Customer instance);
    partial void Deletetbl_Customer(tbl_Customer instance);
    partial void Inserttbl_HistoryLogin(tbl_HistoryLogin instance);
    partial void Updatetbl_HistoryLogin(tbl_HistoryLogin instance);
    partial void Deletetbl_HistoryLogin(tbl_HistoryLogin instance);
    partial void Inserttbl_Payment(tbl_Payment instance);
    partial void Updatetbl_Payment(tbl_Payment instance);
    partial void Deletetbl_Payment(tbl_Payment instance);
    partial void Inserttbl_Route(tbl_Route instance);
    partial void Updatetbl_Route(tbl_Route instance);
    partial void Deletetbl_Route(tbl_Route instance);
    partial void Inserttbl_Schedule(tbl_Schedule instance);
    partial void Updatetbl_Schedule(tbl_Schedule instance);
    partial void Deletetbl_Schedule(tbl_Schedule instance);
    partial void Inserttbl_Station(tbl_Station instance);
    partial void Updatetbl_Station(tbl_Station instance);
    partial void Deletetbl_Station(tbl_Station instance);
    partial void Inserttbl_Ticket(tbl_Ticket instance);
    partial void Updatetbl_Ticket(tbl_Ticket instance);
    partial void Deletetbl_Ticket(tbl_Ticket instance);
    partial void Inserttbl_TicketType(tbl_TicketType instance);
    partial void Updatetbl_TicketType(tbl_TicketType instance);
    partial void Deletetbl_TicketType(tbl_TicketType instance);
    partial void Inserttbl_Train(tbl_Train instance);
    partial void Updatetbl_Train(tbl_Train instance);
    partial void Deletetbl_Train(tbl_Train instance);
    #endregion
		
		public TicketingDBDataContext() : 
				base(global::SystemTicketing.Properties.Settings.Default.TicketingDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TicketingDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketingDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketingDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketingDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Admin> tbl_Admins
		{
			get
			{
				return this.GetTable<tbl_Admin>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Booking> tbl_Bookings
		{
			get
			{
				return this.GetTable<tbl_Booking>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Customer> tbl_Customers
		{
			get
			{
				return this.GetTable<tbl_Customer>();
			}
		}
		
		public System.Data.Linq.Table<tbl_HistoryLogin> tbl_HistoryLogins
		{
			get
			{
				return this.GetTable<tbl_HistoryLogin>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Payment> tbl_Payments
		{
			get
			{
				return this.GetTable<tbl_Payment>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Route> tbl_Routes
		{
			get
			{
				return this.GetTable<tbl_Route>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Schedule> tbl_Schedules
		{
			get
			{
				return this.GetTable<tbl_Schedule>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Station> tbl_Stations
		{
			get
			{
				return this.GetTable<tbl_Station>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Ticket> tbl_Tickets
		{
			get
			{
				return this.GetTable<tbl_Ticket>();
			}
		}
		
		public System.Data.Linq.Table<tbl_TicketType> tbl_TicketTypes
		{
			get
			{
				return this.GetTable<tbl_TicketType>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Train> tbl_Trains
		{
			get
			{
				return this.GetTable<tbl_Train>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Admin")]
	public partial class tbl_Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private string _phonenumber;
		
		private EntitySet<tbl_HistoryLogin> _tbl_HistoryLogins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphonenumberChanging(string value);
    partial void OnphonenumberChanged();
    #endregion
		
		public tbl_Admin()
		{
			this._tbl_HistoryLogins = new EntitySet<tbl_HistoryLogin>(new Action<tbl_HistoryLogin>(this.attach_tbl_HistoryLogins), new Action<tbl_HistoryLogin>(this.detach_tbl_HistoryLogins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string phonenumber
		{
			get
			{
				return this._phonenumber;
			}
			set
			{
				if ((this._phonenumber != value))
				{
					this.OnphonenumberChanging(value);
					this.SendPropertyChanging();
					this._phonenumber = value;
					this.SendPropertyChanged("phonenumber");
					this.OnphonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Admin_tbl_HistoryLogin", Storage="_tbl_HistoryLogins", ThisKey="username", OtherKey="username")]
		public EntitySet<tbl_HistoryLogin> tbl_HistoryLogins
		{
			get
			{
				return this._tbl_HistoryLogins;
			}
			set
			{
				this._tbl_HistoryLogins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_HistoryLogins(tbl_HistoryLogin entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Admin = this;
		}
		
		private void detach_tbl_HistoryLogins(tbl_HistoryLogin entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Booking")]
	public partial class tbl_Booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_booking;
		
		private int _id_customer;
		
		private int _id_schedule;
		
		private System.DateTime _booking_date;
		
		private string _status;
		
		private EntitySet<tbl_Payment> _tbl_Payments;
		
		private EntityRef<tbl_Customer> _tbl_Customer;
		
		private EntityRef<tbl_Schedule> _tbl_Schedule;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_bookingChanging(int value);
    partial void Onid_bookingChanged();
    partial void Onid_customerChanging(int value);
    partial void Onid_customerChanged();
    partial void Onid_scheduleChanging(int value);
    partial void Onid_scheduleChanged();
    partial void Onbooking_dateChanging(System.DateTime value);
    partial void Onbooking_dateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public tbl_Booking()
		{
			this._tbl_Payments = new EntitySet<tbl_Payment>(new Action<tbl_Payment>(this.attach_tbl_Payments), new Action<tbl_Payment>(this.detach_tbl_Payments));
			this._tbl_Customer = default(EntityRef<tbl_Customer>);
			this._tbl_Schedule = default(EntityRef<tbl_Schedule>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_booking", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_booking
		{
			get
			{
				return this._id_booking;
			}
			set
			{
				if ((this._id_booking != value))
				{
					this.Onid_bookingChanging(value);
					this.SendPropertyChanging();
					this._id_booking = value;
					this.SendPropertyChanged("id_booking");
					this.Onid_bookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_customer", DbType="Int NOT NULL")]
		public int id_customer
		{
			get
			{
				return this._id_customer;
			}
			set
			{
				if ((this._id_customer != value))
				{
					if (this._tbl_Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_customerChanging(value);
					this.SendPropertyChanging();
					this._id_customer = value;
					this.SendPropertyChanged("id_customer");
					this.Onid_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_schedule", DbType="Int NOT NULL")]
		public int id_schedule
		{
			get
			{
				return this._id_schedule;
			}
			set
			{
				if ((this._id_schedule != value))
				{
					if (this._tbl_Schedule.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_scheduleChanging(value);
					this.SendPropertyChanging();
					this._id_schedule = value;
					this.SendPropertyChanged("id_schedule");
					this.Onid_scheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_date", DbType="DateTime NOT NULL")]
		public System.DateTime booking_date
		{
			get
			{
				return this._booking_date;
			}
			set
			{
				if ((this._booking_date != value))
				{
					this.Onbooking_dateChanging(value);
					this.SendPropertyChanging();
					this._booking_date = value;
					this.SendPropertyChanged("booking_date");
					this.Onbooking_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Booking_tbl_Payment", Storage="_tbl_Payments", ThisKey="id_booking", OtherKey="id_booking")]
		public EntitySet<tbl_Payment> tbl_Payments
		{
			get
			{
				return this._tbl_Payments;
			}
			set
			{
				this._tbl_Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Booking", Storage="_tbl_Customer", ThisKey="id_customer", OtherKey="id_customer", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Customer tbl_Customer
		{
			get
			{
				return this._tbl_Customer.Entity;
			}
			set
			{
				tbl_Customer previousValue = this._tbl_Customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Customer.Entity = null;
						previousValue.tbl_Bookings.Remove(this);
					}
					this._tbl_Customer.Entity = value;
					if ((value != null))
					{
						value.tbl_Bookings.Add(this);
						this._id_customer = value.id_customer;
					}
					else
					{
						this._id_customer = default(int);
					}
					this.SendPropertyChanged("tbl_Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Schedule_tbl_Booking", Storage="_tbl_Schedule", ThisKey="id_schedule", OtherKey="id_schedule", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Schedule tbl_Schedule
		{
			get
			{
				return this._tbl_Schedule.Entity;
			}
			set
			{
				tbl_Schedule previousValue = this._tbl_Schedule.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Schedule.Entity = null;
						previousValue.tbl_Bookings.Remove(this);
					}
					this._tbl_Schedule.Entity = value;
					if ((value != null))
					{
						value.tbl_Bookings.Add(this);
						this._id_schedule = value.id_schedule;
					}
					else
					{
						this._id_schedule = default(int);
					}
					this.SendPropertyChanged("tbl_Schedule");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Payments(tbl_Payment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Booking = this;
		}
		
		private void detach_tbl_Payments(tbl_Payment entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Booking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Customer")]
	public partial class tbl_Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_customer;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _address;
		
		private string _town;
		
		private string _country;
		
		private string _postcode;
		
		private string _email;
		
		private EntitySet<tbl_Booking> _tbl_Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_customerChanging(int value);
    partial void Onid_customerChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OntownChanging(string value);
    partial void OntownChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnpostcodeChanging(string value);
    partial void OnpostcodeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public tbl_Customer()
		{
			this._tbl_Bookings = new EntitySet<tbl_Booking>(new Action<tbl_Booking>(this.attach_tbl_Bookings), new Action<tbl_Booking>(this.detach_tbl_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_customer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_customer
		{
			get
			{
				return this._id_customer;
			}
			set
			{
				if ((this._id_customer != value))
				{
					this.Onid_customerChanging(value);
					this.SendPropertyChanging();
					this._id_customer = value;
					this.SendPropertyChanged("id_customer");
					this.Onid_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(100)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(100)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_town", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string town
		{
			get
			{
				return this._town;
			}
			set
			{
				if ((this._town != value))
				{
					this.OntownChanging(value);
					this.SendPropertyChanging();
					this._town = value;
					this.SendPropertyChanged("town");
					this.OntownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postcode", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string postcode
		{
			get
			{
				return this._postcode;
			}
			set
			{
				if ((this._postcode != value))
				{
					this.OnpostcodeChanging(value);
					this.SendPropertyChanging();
					this._postcode = value;
					this.SendPropertyChanged("postcode");
					this.OnpostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Customer_tbl_Booking", Storage="_tbl_Bookings", ThisKey="id_customer", OtherKey="id_customer")]
		public EntitySet<tbl_Booking> tbl_Bookings
		{
			get
			{
				return this._tbl_Bookings;
			}
			set
			{
				this._tbl_Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Bookings(tbl_Booking entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = this;
		}
		
		private void detach_tbl_Bookings(tbl_Booking entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_HistoryLogin")]
	public partial class tbl_HistoryLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_history;
		
		private string _username;
		
		private System.DateTime _login_date;
		
		private EntityRef<tbl_Admin> _tbl_Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_historyChanging(int value);
    partial void Onid_historyChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onlogin_dateChanging(System.DateTime value);
    partial void Onlogin_dateChanged();
    #endregion
		
		public tbl_HistoryLogin()
		{
			this._tbl_Admin = default(EntityRef<tbl_Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_history", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_history
		{
			get
			{
				return this._id_history;
			}
			set
			{
				if ((this._id_history != value))
				{
					this.Onid_historyChanging(value);
					this.SendPropertyChanging();
					this._id_history = value;
					this.SendPropertyChanged("id_history");
					this.Onid_historyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._tbl_Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_date", DbType="DateTime NOT NULL")]
		public System.DateTime login_date
		{
			get
			{
				return this._login_date;
			}
			set
			{
				if ((this._login_date != value))
				{
					this.Onlogin_dateChanging(value);
					this.SendPropertyChanging();
					this._login_date = value;
					this.SendPropertyChanged("login_date");
					this.Onlogin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Admin_tbl_HistoryLogin", Storage="_tbl_Admin", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public tbl_Admin tbl_Admin
		{
			get
			{
				return this._tbl_Admin.Entity;
			}
			set
			{
				tbl_Admin previousValue = this._tbl_Admin.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Admin.Entity = null;
						previousValue.tbl_HistoryLogins.Remove(this);
					}
					this._tbl_Admin.Entity = value;
					if ((value != null))
					{
						value.tbl_HistoryLogins.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("tbl_Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Payment")]
	public partial class tbl_Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_payment;
		
		private int _id_booking;
		
		private double _total_payment;
		
		private double _paid;
		
		private EntityRef<tbl_Booking> _tbl_Booking;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_paymentChanging(int value);
    partial void Onid_paymentChanged();
    partial void Onid_bookingChanging(int value);
    partial void Onid_bookingChanged();
    partial void Ontotal_paymentChanging(double value);
    partial void Ontotal_paymentChanged();
    partial void OnpaidChanging(double value);
    partial void OnpaidChanged();
    #endregion
		
		public tbl_Payment()
		{
			this._tbl_Booking = default(EntityRef<tbl_Booking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_payment", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_payment
		{
			get
			{
				return this._id_payment;
			}
			set
			{
				if ((this._id_payment != value))
				{
					this.Onid_paymentChanging(value);
					this.SendPropertyChanging();
					this._id_payment = value;
					this.SendPropertyChanged("id_payment");
					this.Onid_paymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_booking", DbType="Int NOT NULL")]
		public int id_booking
		{
			get
			{
				return this._id_booking;
			}
			set
			{
				if ((this._id_booking != value))
				{
					if (this._tbl_Booking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bookingChanging(value);
					this.SendPropertyChanging();
					this._id_booking = value;
					this.SendPropertyChanged("id_booking");
					this.Onid_bookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_payment", DbType="Float NOT NULL")]
		public double total_payment
		{
			get
			{
				return this._total_payment;
			}
			set
			{
				if ((this._total_payment != value))
				{
					this.Ontotal_paymentChanging(value);
					this.SendPropertyChanging();
					this._total_payment = value;
					this.SendPropertyChanged("total_payment");
					this.Ontotal_paymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="Float NOT NULL")]
		public double paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Booking_tbl_Payment", Storage="_tbl_Booking", ThisKey="id_booking", OtherKey="id_booking", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Booking tbl_Booking
		{
			get
			{
				return this._tbl_Booking.Entity;
			}
			set
			{
				tbl_Booking previousValue = this._tbl_Booking.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Booking.Entity = null;
						previousValue.tbl_Payments.Remove(this);
					}
					this._tbl_Booking.Entity = value;
					if ((value != null))
					{
						value.tbl_Payments.Add(this);
						this._id_booking = value.id_booking;
					}
					else
					{
						this._id_booking = default(int);
					}
					this.SendPropertyChanged("tbl_Booking");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Route")]
	public partial class tbl_Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_route;
		
		private int _id_departure;
		
		private int _id_arrival;
		
		private EntitySet<tbl_Schedule> _tbl_Schedules;
		
		private EntityRef<tbl_Station> _tbl_Station;
		
		private EntityRef<tbl_Station> _tbl_Station1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_routeChanging(int value);
    partial void Onid_routeChanged();
    partial void Onid_departureChanging(int value);
    partial void Onid_departureChanged();
    partial void Onid_arrivalChanging(int value);
    partial void Onid_arrivalChanged();
    #endregion
		
		public tbl_Route()
		{
			this._tbl_Schedules = new EntitySet<tbl_Schedule>(new Action<tbl_Schedule>(this.attach_tbl_Schedules), new Action<tbl_Schedule>(this.detach_tbl_Schedules));
			this._tbl_Station = default(EntityRef<tbl_Station>);
			this._tbl_Station1 = default(EntityRef<tbl_Station>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_route", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_route
		{
			get
			{
				return this._id_route;
			}
			set
			{
				if ((this._id_route != value))
				{
					this.Onid_routeChanging(value);
					this.SendPropertyChanging();
					this._id_route = value;
					this.SendPropertyChanged("id_route");
					this.Onid_routeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_departure", DbType="Int NOT NULL")]
		public int id_departure
		{
			get
			{
				return this._id_departure;
			}
			set
			{
				if ((this._id_departure != value))
				{
					if (this._tbl_Station.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_departureChanging(value);
					this.SendPropertyChanging();
					this._id_departure = value;
					this.SendPropertyChanged("id_departure");
					this.Onid_departureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_arrival", DbType="Int NOT NULL")]
		public int id_arrival
		{
			get
			{
				return this._id_arrival;
			}
			set
			{
				if ((this._id_arrival != value))
				{
					if (this._tbl_Station1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_arrivalChanging(value);
					this.SendPropertyChanging();
					this._id_arrival = value;
					this.SendPropertyChanged("id_arrival");
					this.Onid_arrivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Route_tbl_Schedule", Storage="_tbl_Schedules", ThisKey="id_route", OtherKey="id_route")]
		public EntitySet<tbl_Schedule> tbl_Schedules
		{
			get
			{
				return this._tbl_Schedules;
			}
			set
			{
				this._tbl_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Station_tbl_Route", Storage="_tbl_Station", ThisKey="id_departure", OtherKey="id_station", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Station tbl_Station
		{
			get
			{
				return this._tbl_Station.Entity;
			}
			set
			{
				tbl_Station previousValue = this._tbl_Station.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Station.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Station.Entity = null;
						previousValue.tbl_Routes.Remove(this);
					}
					this._tbl_Station.Entity = value;
					if ((value != null))
					{
						value.tbl_Routes.Add(this);
						this._id_departure = value.id_station;
					}
					else
					{
						this._id_departure = default(int);
					}
					this.SendPropertyChanged("tbl_Station");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Station_tbl_Route1", Storage="_tbl_Station1", ThisKey="id_arrival", OtherKey="id_station", IsForeignKey=true)]
		public tbl_Station tbl_Station1
		{
			get
			{
				return this._tbl_Station1.Entity;
			}
			set
			{
				tbl_Station previousValue = this._tbl_Station1.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Station1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Station1.Entity = null;
						previousValue.tbl_Routes1.Remove(this);
					}
					this._tbl_Station1.Entity = value;
					if ((value != null))
					{
						value.tbl_Routes1.Add(this);
						this._id_arrival = value.id_station;
					}
					else
					{
						this._id_arrival = default(int);
					}
					this.SendPropertyChanged("tbl_Station1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Route = this;
		}
		
		private void detach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Schedule")]
	public partial class tbl_Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_schedule;
		
		private int _id_train;
		
		private int _id_route;
		
		private int _id_ticket;
		
		private double _harga;
		
		private System.DateTime _departure_date;
		
		private EntitySet<tbl_Booking> _tbl_Bookings;
		
		private EntityRef<tbl_Route> _tbl_Route;
		
		private EntityRef<tbl_Ticket> _tbl_Ticket;
		
		private EntityRef<tbl_Train> _tbl_Train;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_scheduleChanging(int value);
    partial void Onid_scheduleChanged();
    partial void Onid_trainChanging(int value);
    partial void Onid_trainChanged();
    partial void Onid_routeChanging(int value);
    partial void Onid_routeChanged();
    partial void Onid_ticketChanging(int value);
    partial void Onid_ticketChanged();
    partial void OnhargaChanging(double value);
    partial void OnhargaChanged();
    partial void Ondeparture_dateChanging(System.DateTime value);
    partial void Ondeparture_dateChanged();
    #endregion
		
		public tbl_Schedule()
		{
			this._tbl_Bookings = new EntitySet<tbl_Booking>(new Action<tbl_Booking>(this.attach_tbl_Bookings), new Action<tbl_Booking>(this.detach_tbl_Bookings));
			this._tbl_Route = default(EntityRef<tbl_Route>);
			this._tbl_Ticket = default(EntityRef<tbl_Ticket>);
			this._tbl_Train = default(EntityRef<tbl_Train>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_schedule", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_schedule
		{
			get
			{
				return this._id_schedule;
			}
			set
			{
				if ((this._id_schedule != value))
				{
					this.Onid_scheduleChanging(value);
					this.SendPropertyChanging();
					this._id_schedule = value;
					this.SendPropertyChanged("id_schedule");
					this.Onid_scheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_train", DbType="Int NOT NULL")]
		public int id_train
		{
			get
			{
				return this._id_train;
			}
			set
			{
				if ((this._id_train != value))
				{
					if (this._tbl_Train.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_trainChanging(value);
					this.SendPropertyChanging();
					this._id_train = value;
					this.SendPropertyChanged("id_train");
					this.Onid_trainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_route", DbType="Int NOT NULL")]
		public int id_route
		{
			get
			{
				return this._id_route;
			}
			set
			{
				if ((this._id_route != value))
				{
					if (this._tbl_Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_routeChanging(value);
					this.SendPropertyChanging();
					this._id_route = value;
					this.SendPropertyChanged("id_route");
					this.Onid_routeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ticket", DbType="Int NOT NULL")]
		public int id_ticket
		{
			get
			{
				return this._id_ticket;
			}
			set
			{
				if ((this._id_ticket != value))
				{
					if (this._tbl_Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ticketChanging(value);
					this.SendPropertyChanging();
					this._id_ticket = value;
					this.SendPropertyChanged("id_ticket");
					this.Onid_ticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_harga", DbType="Float NOT NULL")]
		public double harga
		{
			get
			{
				return this._harga;
			}
			set
			{
				if ((this._harga != value))
				{
					this.OnhargaChanging(value);
					this.SendPropertyChanging();
					this._harga = value;
					this.SendPropertyChanged("harga");
					this.OnhargaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departure_date", DbType="DateTime NOT NULL")]
		public System.DateTime departure_date
		{
			get
			{
				return this._departure_date;
			}
			set
			{
				if ((this._departure_date != value))
				{
					this.Ondeparture_dateChanging(value);
					this.SendPropertyChanging();
					this._departure_date = value;
					this.SendPropertyChanged("departure_date");
					this.Ondeparture_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Schedule_tbl_Booking", Storage="_tbl_Bookings", ThisKey="id_schedule", OtherKey="id_schedule")]
		public EntitySet<tbl_Booking> tbl_Bookings
		{
			get
			{
				return this._tbl_Bookings;
			}
			set
			{
				this._tbl_Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Route_tbl_Schedule", Storage="_tbl_Route", ThisKey="id_route", OtherKey="id_route", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Route tbl_Route
		{
			get
			{
				return this._tbl_Route.Entity;
			}
			set
			{
				tbl_Route previousValue = this._tbl_Route.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Route.Entity = null;
						previousValue.tbl_Schedules.Remove(this);
					}
					this._tbl_Route.Entity = value;
					if ((value != null))
					{
						value.tbl_Schedules.Add(this);
						this._id_route = value.id_route;
					}
					else
					{
						this._id_route = default(int);
					}
					this.SendPropertyChanged("tbl_Route");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Ticket_tbl_Schedule", Storage="_tbl_Ticket", ThisKey="id_ticket", OtherKey="id_ticket", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Ticket tbl_Ticket
		{
			get
			{
				return this._tbl_Ticket.Entity;
			}
			set
			{
				tbl_Ticket previousValue = this._tbl_Ticket.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Ticket.Entity = null;
						previousValue.tbl_Schedules.Remove(this);
					}
					this._tbl_Ticket.Entity = value;
					if ((value != null))
					{
						value.tbl_Schedules.Add(this);
						this._id_ticket = value.id_ticket;
					}
					else
					{
						this._id_ticket = default(int);
					}
					this.SendPropertyChanged("tbl_Ticket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Train_tbl_Schedule", Storage="_tbl_Train", ThisKey="id_train", OtherKey="id_train", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Train tbl_Train
		{
			get
			{
				return this._tbl_Train.Entity;
			}
			set
			{
				tbl_Train previousValue = this._tbl_Train.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Train.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Train.Entity = null;
						previousValue.tbl_Schedules.Remove(this);
					}
					this._tbl_Train.Entity = value;
					if ((value != null))
					{
						value.tbl_Schedules.Add(this);
						this._id_train = value.id_train;
					}
					else
					{
						this._id_train = default(int);
					}
					this.SendPropertyChanged("tbl_Train");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Bookings(tbl_Booking entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Schedule = this;
		}
		
		private void detach_tbl_Bookings(tbl_Booking entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Schedule = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Station")]
	public partial class tbl_Station : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_station;
		
		private string _station_name;
		
		private string _station_location;
		
		private EntitySet<tbl_Route> _tbl_Routes;
		
		private EntitySet<tbl_Route> _tbl_Routes1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_stationChanging(int value);
    partial void Onid_stationChanged();
    partial void Onstation_nameChanging(string value);
    partial void Onstation_nameChanged();
    partial void Onstation_locationChanging(string value);
    partial void Onstation_locationChanged();
    #endregion
		
		public tbl_Station()
		{
			this._tbl_Routes = new EntitySet<tbl_Route>(new Action<tbl_Route>(this.attach_tbl_Routes), new Action<tbl_Route>(this.detach_tbl_Routes));
			this._tbl_Routes1 = new EntitySet<tbl_Route>(new Action<tbl_Route>(this.attach_tbl_Routes1), new Action<tbl_Route>(this.detach_tbl_Routes1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_station", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_station
		{
			get
			{
				return this._id_station;
			}
			set
			{
				if ((this._id_station != value))
				{
					this.Onid_stationChanging(value);
					this.SendPropertyChanging();
					this._id_station = value;
					this.SendPropertyChanged("id_station");
					this.Onid_stationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_station_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string station_name
		{
			get
			{
				return this._station_name;
			}
			set
			{
				if ((this._station_name != value))
				{
					this.Onstation_nameChanging(value);
					this.SendPropertyChanging();
					this._station_name = value;
					this.SendPropertyChanged("station_name");
					this.Onstation_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_station_location", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string station_location
		{
			get
			{
				return this._station_location;
			}
			set
			{
				if ((this._station_location != value))
				{
					this.Onstation_locationChanging(value);
					this.SendPropertyChanging();
					this._station_location = value;
					this.SendPropertyChanged("station_location");
					this.Onstation_locationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Station_tbl_Route", Storage="_tbl_Routes", ThisKey="id_station", OtherKey="id_departure")]
		public EntitySet<tbl_Route> tbl_Routes
		{
			get
			{
				return this._tbl_Routes;
			}
			set
			{
				this._tbl_Routes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Station_tbl_Route1", Storage="_tbl_Routes1", ThisKey="id_station", OtherKey="id_arrival")]
		public EntitySet<tbl_Route> tbl_Routes1
		{
			get
			{
				return this._tbl_Routes1;
			}
			set
			{
				this._tbl_Routes1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Routes(tbl_Route entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Station = this;
		}
		
		private void detach_tbl_Routes(tbl_Route entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Station = null;
		}
		
		private void attach_tbl_Routes1(tbl_Route entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Station1 = this;
		}
		
		private void detach_tbl_Routes1(tbl_Route entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Station1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Ticket")]
	public partial class tbl_Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ticket;
		
		private string _class_ticket;
		
		private EntitySet<tbl_Schedule> _tbl_Schedules;
		
		private EntitySet<tbl_TicketType> _tbl_TicketTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ticketChanging(int value);
    partial void Onid_ticketChanged();
    partial void Onclass_ticketChanging(string value);
    partial void Onclass_ticketChanged();
    #endregion
		
		public tbl_Ticket()
		{
			this._tbl_Schedules = new EntitySet<tbl_Schedule>(new Action<tbl_Schedule>(this.attach_tbl_Schedules), new Action<tbl_Schedule>(this.detach_tbl_Schedules));
			this._tbl_TicketTypes = new EntitySet<tbl_TicketType>(new Action<tbl_TicketType>(this.attach_tbl_TicketTypes), new Action<tbl_TicketType>(this.detach_tbl_TicketTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ticket", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_ticket
		{
			get
			{
				return this._id_ticket;
			}
			set
			{
				if ((this._id_ticket != value))
				{
					this.Onid_ticketChanging(value);
					this.SendPropertyChanging();
					this._id_ticket = value;
					this.SendPropertyChanged("id_ticket");
					this.Onid_ticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_ticket", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string class_ticket
		{
			get
			{
				return this._class_ticket;
			}
			set
			{
				if ((this._class_ticket != value))
				{
					this.Onclass_ticketChanging(value);
					this.SendPropertyChanging();
					this._class_ticket = value;
					this.SendPropertyChanged("class_ticket");
					this.Onclass_ticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Ticket_tbl_Schedule", Storage="_tbl_Schedules", ThisKey="id_ticket", OtherKey="id_ticket")]
		public EntitySet<tbl_Schedule> tbl_Schedules
		{
			get
			{
				return this._tbl_Schedules;
			}
			set
			{
				this._tbl_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Ticket_tbl_TicketType", Storage="_tbl_TicketTypes", ThisKey="id_ticket", OtherKey="id_ticket")]
		public EntitySet<tbl_TicketType> tbl_TicketTypes
		{
			get
			{
				return this._tbl_TicketTypes;
			}
			set
			{
				this._tbl_TicketTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Ticket = this;
		}
		
		private void detach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Ticket = null;
		}
		
		private void attach_tbl_TicketTypes(tbl_TicketType entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Ticket = this;
		}
		
		private void detach_tbl_TicketTypes(tbl_TicketType entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Ticket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_TicketType")]
	public partial class tbl_TicketType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_type;
		
		private int _id_ticket;
		
		private double _harga_ticket;
		
		private EntityRef<tbl_Ticket> _tbl_Ticket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_typeChanging(int value);
    partial void Onid_typeChanged();
    partial void Onid_ticketChanging(int value);
    partial void Onid_ticketChanged();
    partial void Onharga_ticketChanging(double value);
    partial void Onharga_ticketChanged();
    #endregion
		
		public tbl_TicketType()
		{
			this._tbl_Ticket = default(EntityRef<tbl_Ticket>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_type
		{
			get
			{
				return this._id_type;
			}
			set
			{
				if ((this._id_type != value))
				{
					this.Onid_typeChanging(value);
					this.SendPropertyChanging();
					this._id_type = value;
					this.SendPropertyChanged("id_type");
					this.Onid_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ticket", DbType="Int NOT NULL")]
		public int id_ticket
		{
			get
			{
				return this._id_ticket;
			}
			set
			{
				if ((this._id_ticket != value))
				{
					if (this._tbl_Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ticketChanging(value);
					this.SendPropertyChanging();
					this._id_ticket = value;
					this.SendPropertyChanged("id_ticket");
					this.Onid_ticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_harga_ticket", DbType="Float NOT NULL")]
		public double harga_ticket
		{
			get
			{
				return this._harga_ticket;
			}
			set
			{
				if ((this._harga_ticket != value))
				{
					this.Onharga_ticketChanging(value);
					this.SendPropertyChanging();
					this._harga_ticket = value;
					this.SendPropertyChanged("harga_ticket");
					this.Onharga_ticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Ticket_tbl_TicketType", Storage="_tbl_Ticket", ThisKey="id_ticket", OtherKey="id_ticket", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tbl_Ticket tbl_Ticket
		{
			get
			{
				return this._tbl_Ticket.Entity;
			}
			set
			{
				tbl_Ticket previousValue = this._tbl_Ticket.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Ticket.Entity = null;
						previousValue.tbl_TicketTypes.Remove(this);
					}
					this._tbl_Ticket.Entity = value;
					if ((value != null))
					{
						value.tbl_TicketTypes.Add(this);
						this._id_ticket = value.id_ticket;
					}
					else
					{
						this._id_ticket = default(int);
					}
					this.SendPropertyChanged("tbl_Ticket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Train")]
	public partial class tbl_Train : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_train;
		
		private string _train_name;
		
		private int _train_seat;
		
		private EntitySet<tbl_Schedule> _tbl_Schedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_trainChanging(int value);
    partial void Onid_trainChanged();
    partial void Ontrain_nameChanging(string value);
    partial void Ontrain_nameChanged();
    partial void Ontrain_seatChanging(int value);
    partial void Ontrain_seatChanged();
    #endregion
		
		public tbl_Train()
		{
			this._tbl_Schedules = new EntitySet<tbl_Schedule>(new Action<tbl_Schedule>(this.attach_tbl_Schedules), new Action<tbl_Schedule>(this.detach_tbl_Schedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_train", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_train
		{
			get
			{
				return this._id_train;
			}
			set
			{
				if ((this._id_train != value))
				{
					this.Onid_trainChanging(value);
					this.SendPropertyChanging();
					this._id_train = value;
					this.SendPropertyChanged("id_train");
					this.Onid_trainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_train_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string train_name
		{
			get
			{
				return this._train_name;
			}
			set
			{
				if ((this._train_name != value))
				{
					this.Ontrain_nameChanging(value);
					this.SendPropertyChanging();
					this._train_name = value;
					this.SendPropertyChanged("train_name");
					this.Ontrain_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_train_seat", DbType="Int NOT NULL")]
		public int train_seat
		{
			get
			{
				return this._train_seat;
			}
			set
			{
				if ((this._train_seat != value))
				{
					this.Ontrain_seatChanging(value);
					this.SendPropertyChanging();
					this._train_seat = value;
					this.SendPropertyChanged("train_seat");
					this.Ontrain_seatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Train_tbl_Schedule", Storage="_tbl_Schedules", ThisKey="id_train", OtherKey="id_train")]
		public EntitySet<tbl_Schedule> tbl_Schedules
		{
			get
			{
				return this._tbl_Schedules;
			}
			set
			{
				this._tbl_Schedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Train = this;
		}
		
		private void detach_tbl_Schedules(tbl_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Train = null;
		}
	}
}
#pragma warning restore 1591
